/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.allInterfaces.action3saisies;

import com.connectDb.ConnectDb;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Base64;
import javax.swing.JOptionPane;
import org.json.simple.JSONObject;


/**
 *
 * @author RAP
 */
public class ModificationConfigurationBaseDeDonnees extends javax.swing.JInternalFrame {
    private static Connection connectDatabase;
    private static PreparedStatement st;
    private static ResultSet rs;
    
    private String BDD_HOST = "";
    private Integer BDD_PORT;
    private String BDD_DBNAME = "";
    private String BDD_USER = "";
    private String BDD_PWD = "";
    
    
    /**
     * Creates new form UserFormDialog
     */
    public ModificationConfigurationBaseDeDonnees(String host, Integer port, String dbname, String user, String password) {
            
        this.BDD_HOST = host;
        this.BDD_PORT = port;
        this.BDD_DBNAME = dbname;
        this.BDD_USER = user;
        this.BDD_PWD = password;
        
        //System.out.println("host  = " + host);
        //System.out.println("port  = " + port);
        //System.out.println("dbname  = " + dbname);
        //System.out.println("user  = " + user);
        //System.out.println("password  = " + password);
        

        initComponents();
        
           
        this.txt_username.setText(user);
        this.txt_nom_bdd.setText(dbname);
        this.txt_nom_hote.setText(host);
        this.txt_port.setText(port.toString());
        this.txt_password.setText(password);
            

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_username = new javax.swing.JTextField();
        btn_annuler = new javax.swing.JButton();
        btn_valider = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        j_label_nom_hote = new javax.swing.JLabel();
        j_label_port = new javax.swing.JLabel();
        j_label_nom_bdd = new javax.swing.JLabel();
        txt_port = new javax.swing.JTextField();
        txt_password = new javax.swing.JTextField();
        txt_nom_hote = new javax.swing.JTextField();
        txt_nom_bdd = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Modification configuration Base de données");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ressources/logo geox2~2.png"))); // NOI18N
        setName("jf_login"); // NOI18N

        txt_username.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        txt_username.setToolTipText("Nom d'utilisateur");
        txt_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_usernameKeyPressed(evt);
            }
        });

        btn_annuler.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btn_annuler.setText("Annuler");
        btn_annuler.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_annulerActionPerformed(evt);
            }
        });
        btn_annuler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_annulerKeyPressed(evt);
            }
        });

        btn_valider.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btn_valider.setText("Valider");
        btn_valider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_validerActionPerformed(evt);
            }
        });
        btn_valider.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_validerKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel1.setText("Nom d'utilisateur");

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel2.setText("Mot de passe");

        j_label_nom_hote.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_label_nom_hote.setText("Nom d'hôte");

        j_label_port.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_label_port.setText("Port");

        j_label_nom_bdd.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_label_nom_bdd.setText("Nom Base de données");

        txt_port.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        txt_port.setToolTipText("Nom d'utilisateur");
        txt_port.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_portKeyPressed(evt);
            }
        });

        txt_password.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        txt_password.setToolTipText("Nom d'utilisateur");
        txt_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_passwordKeyPressed(evt);
            }
        });

        txt_nom_hote.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        txt_nom_hote.setToolTipText("Nom d'utilisateur");
        txt_nom_hote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nom_hoteKeyPressed(evt);
            }
        });

        txt_nom_bdd.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        txt_nom_bdd.setToolTipText("Nom d'utilisateur");
        txt_nom_bdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nom_bddKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(j_label_nom_bdd, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_nom_bdd, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(j_label_port, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(txt_port))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j_label_nom_hote, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_username)
                            .addComponent(txt_password)
                            .addComponent(txt_nom_hote))))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_valider)
                .addGap(62, 62, 62)
                .addComponent(btn_annuler)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txt_password, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j_label_nom_hote)
                    .addComponent(txt_nom_hote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j_label_port)
                    .addComponent(txt_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j_label_nom_bdd)
                    .addComponent(txt_nom_bdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_annuler)
                    .addComponent(btn_valider))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_annulerActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        //this.j_menu_parametres.
        // hime eto this.getParent().getParent().getParent().getParent().getParent()
        System.out.println("this.getParent().getParent().getParent() vaut = "+this.getParent().getParent().getParent().getParent().getParent());
        
    }//GEN-LAST:event_btn_annulerActionPerformed


    
    private void modificationFichierConf(){
           
            try{
                
                connectDatabase = new ConnectDb(this.txt_nom_hote.getText(),Integer.parseInt(this.txt_port.getText()), this.txt_nom_bdd.getText(), this.txt_username.getText(), this.txt_password.getText()).getConnection();
            
                if(connectDatabase == null){
                    System.out.println("Impossible de se connecter à la base de données !");
                    JOptionPane.showMessageDialog(null, "Impossible de se connecter à la base de données !\n\nVérifierv les champs","Connexion dans la base impossible !", JOptionPane.INFORMATION_MESSAGE); 

                }else{
                    
                    System.out.println("Tous ok\nonnection dans la base de données OK.");
                    
                    
                    // Modification du ficiher de configuration
                    // ENCODAGE DES DONNEES
                    String hashHost = Base64.getEncoder().encodeToString(this.txt_nom_hote.getText().getBytes("UTF-8"));
                    String hashPort = Base64.getEncoder().encodeToString(this.txt_port.getText().getBytes("UTF-8"));
                    String hashDbname = Base64.getEncoder().encodeToString(this.txt_nom_bdd.getText().getBytes("UTF-8"));
                    String hashUser = Base64.getEncoder().encodeToString(this.txt_username.getText().getBytes("UTF-8"));
                    String hashPassword = Base64.getEncoder().encodeToString(this.txt_password.getText().getBytes("UTF-8"));
                    
                    
                        // remplissage de l'objet JSON
                        JSONObject j = new JSONObject();
                        j.put("host",  hashHost);
                        j.put("port", hashPort);
                        j.put("dbname", hashDbname);
                        j.put("user", hashUser);
                        j.put("password", hashPassword);

                    // VERIFIER SI FICHIER DE CONF EXISTE
                    //String racine = new File("").getAbsolutePath();
                    String path = new File("").getAbsolutePath()+"\\conf";
                    String filePathAndName = path + "\\config.json";

                    File folder = new File(path);
                    File file = new File(filePathAndName);

                        
                        if (file.exists()) {
                    
                            System.out.println("fichier de conf existe déjà...");
                            
                            // suppression du fichier de configuration
                            if(Files.deleteIfExists(Paths.get(filePathAndName))){
                        
                                try(FileWriter fileJson = new FileWriter(filePathAndName)){

                                    System.out.println("Remplissage du fichier de conf ...");

                                    fileJson.write(j.toString());
                                    fileJson.close();

                                    System.out.println("Modification ficihier de configuration effectuée avec succès !");
                                    JOptionPane.showMessageDialog(null, "Modification ficihier de configuration effectuée avec succès !\n\nVeuillez redemarrer l'application pour prendre en compte la madification apporter.","Modification fichier conf Ok.", JOptionPane.INFORMATION_MESSAGE);

                                    System.out.println("dossier et fichier conf trouvé ! .......");

                                }catch(IOException e){

                                    e.printStackTrace(); 

                                    System.out.println("Erreur remplissage fichier de configuration");
                                    JOptionPane.showMessageDialog(null, "Erreur remplissage fichier de configuration\n\n"+e.getMessage(),"Erreur remplissage fichier de configuration", JOptionPane.INFORMATION_MESSAGE);
                                }
                            }
                    }else{
                        
                            try(FileWriter fileJson = new FileWriter(filePathAndName)){

                                System.out.println("Remplissage du fichier de conf ...");

                                fileJson.write(j.toString());
                                fileJson.close();

                                System.out.println("Modification ficihier de configuration effectuée avec succès !");
                                JOptionPane.showMessageDialog(null, "Modification ficihier de configuration effectuée avec succès !\n\nVeuillez redemarrer l'application pour prendre en compte la modification apporter.","Modification fichier conf Ok.", JOptionPane.INFORMATION_MESSAGE);

                                System.out.println("dossier et fichier conf trouvé ! .......");

                            }catch(IOException e){

                                e.printStackTrace(); 

                                System.out.println("Erreur remplissage fichier de configuration");
                                JOptionPane.showMessageDialog(null, "Erreur remplissage fichier de configuration\n\n"+e.getMessage(),"Erreur remplissage fichier de configuration", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        
                    
                }
            }catch(Exception e){
                    System.out.println("Impossible de se connecter à la base de données !");
                    JOptionPane.showMessageDialog(null, "Impossible de se connecter à la base de données !\n\nVérifierv les champs","Connexion dans la base impossible !", JOptionPane.INFORMATION_MESSAGE); 
 
            }
            

            

    }
    
    
    private void btn_validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_validerActionPerformed

        if(this.txt_username.getText().equals("") && this.txt_nom_bdd.getText().equals("") && this.txt_nom_hote.getText().equals("") && this.txt_port.getText().equals("")&& this.txt_password.getText().equals("")){
            System.out.println("Tous les champs sont requises !");
            JOptionPane.showMessageDialog(null, "Tous le champs sont requises !","Tous le champs sont requises", JOptionPane.INFORMATION_MESSAGE); 
            
        }else if(this.txt_username.getText().equals("")){
            System.out.println("Le champ Nom d'utilisateur est requis !");
            JOptionPane.showMessageDialog(null, "Le champ Nom d'utilisateur vide !","Le champ Nom d'utilisateur est requis", JOptionPane.INFORMATION_MESSAGE); 
            
        }else if(this.txt_nom_bdd.getText().equals("")){
            System.out.println("Le champ Nom base de données est requis !");
            JOptionPane.showMessageDialog(null, "Le champ Nom base de données vide !","Le champ Nom base de données est requis", JOptionPane.INFORMATION_MESSAGE); 
            
        }else if(this.txt_nom_hote.getText().equals("")){
           System.out.println("Le champ Nom d'hôte est requis !");
            JOptionPane.showMessageDialog(null, "Le champ Nom d'hôte vide !","Le champ Nom d'hôte est requis", JOptionPane.INFORMATION_MESSAGE); 
             
        }else if(this.txt_port.getText().equals("")){
           System.out.println("Le champ Port est requis !");
            JOptionPane.showMessageDialog(null, "Le champ Port vide !","Le champ Port est requis", JOptionPane.INFORMATION_MESSAGE); 
             
        }else if(this.txt_password.getText().equals("")){
            System.out.println("Le champ Mot de passe est requis !");
            JOptionPane.showMessageDialog(null, "Le champ Mot de passe vide !","Le champ Mot de passe est requis", JOptionPane.INFORMATION_MESSAGE); 
              
        }else{
 
            this.modificationFichierConf();
        }


    }//GEN-LAST:event_btn_validerActionPerformed

    private void btn_validerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_validerKeyPressed
        if(evt.getKeyCode() == 10){
        
            this.modificationFichierConf();

        }else if(evt.getKeyCode() == 27){
        
            System.exit(0);

        }else{
            
            System.out.println("Autres touche touché ..." + evt.getKeyCode());
        }
    }//GEN-LAST:event_btn_validerKeyPressed

    private void btn_annulerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_annulerKeyPressed
        
    }//GEN-LAST:event_btn_annulerKeyPressed

    private void txt_usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usernameKeyPressed
        
        if(evt.getKeyCode() == 10){
        
            this.modificationFichierConf();

        }else if(evt.getKeyCode() == 27){
        
            System.exit(0);

        }else{
            
            System.out.println("Autres touche touché ..." + evt.getKeyCode());
        }
    }//GEN-LAST:event_txt_usernameKeyPressed

    private void txt_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passwordKeyPressed
        if(evt.getKeyCode() == 10){
        
            this.modificationFichierConf();

        }else if(evt.getKeyCode() == 27){
        
            System.exit(0);

        }else{
            
            System.out.println("Autres touche touché ..." + evt.getKeyCode());
        }
    }//GEN-LAST:event_txt_passwordKeyPressed

    private void txt_nom_hoteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nom_hoteKeyPressed
        if(evt.getKeyCode() == 10){
        
            this.modificationFichierConf();

        }else if(evt.getKeyCode() == 27){
        
            System.exit(0);

        }else{
            
            System.out.println("Autres touche touché ..." + evt.getKeyCode());
        }
    }//GEN-LAST:event_txt_nom_hoteKeyPressed

    private void txt_portKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_portKeyPressed
        if(evt.getKeyCode() == 10){
        
            this.modificationFichierConf();

        }else if(evt.getKeyCode() == 27){
        
            System.exit(0);

        }else{
            
            System.out.println("Autres touche touché ..." + evt.getKeyCode());
        }
    }//GEN-LAST:event_txt_portKeyPressed

    private void txt_nom_bddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nom_bddKeyPressed
        if(evt.getKeyCode() == 10){
        
            this.modificationFichierConf();

        }else if(evt.getKeyCode() == 27){
        
            System.exit(0);

        }else{
            
            System.out.println("Autres touche touché ..." + evt.getKeyCode());
        }
    }//GEN-LAST:event_txt_nom_bddKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificationConfigurationBaseDeDonnees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificationConfigurationBaseDeDonnees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificationConfigurationBaseDeDonnees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificationConfigurationBaseDeDonnees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                

                
                System.out.println("Tonga ato ny lozakaaaa");
                
                //new UserFormDialog(HOST, PORT, DBNAME, USER, PWD).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_annuler;
    private javax.swing.JButton btn_valider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel j_label_nom_bdd;
    private javax.swing.JLabel j_label_nom_hote;
    private javax.swing.JLabel j_label_port;
    private javax.swing.JTextField txt_nom_bdd;
    private javax.swing.JTextField txt_nom_hote;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_port;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
