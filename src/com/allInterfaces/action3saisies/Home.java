/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.allInterfaces.action3saisies;


import com.classes.action3saisie.Formats;
import com.classes.action3saisie.Querry;
import com.connectDb.ConnectDb;
import com.classes.action3saisie.Utilisateurs;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author RAP
 */
public class Home extends javax.swing.JFrame {
    
    private static Connection connectDatabase;
    private static PreparedStatement st;
    private static ResultSet rs;
    private String userName;
    private String pswd;
    private String type_operation;

    private String BDD_HOST = "";
    private Integer BDD_PORT;
    private String BDD_DBNAME = "";
    private String BDD_USER = "";
    private String BDD_PWD = "";
    private String BDD_ID_PROFIL = "";

    /**
     * Creates new form Home
     * @param HOST
     * @param DBNAME
     * @param PORT
     * @param USER
     * @param PWD
     * @param username
     * @param password
     * @param TYPE_OPERATION
     * @param ID_PROFIL
     */
    public Home(String HOST, String DBNAME, Integer PORT, String USER, String PWD , String username, String password, String TYPE_OPERATION, String ID_PROFIL) {

        
        this.userName = username;
        this.pswd = password;
        this.type_operation = TYPE_OPERATION;

        this.BDD_HOST = HOST;
        this.BDD_PORT = PORT;
        this.BDD_DBNAME = DBNAME;
        this.BDD_USER = USER;
        this.BDD_PWD = PWD;
        this.BDD_ID_PROFIL = ID_PROFIL;
        
        
        initComponents();
        
        this.j_menu_controllesSaisies.setEnabled(false);
        this.j_menu_export_listes_demandeurs.setEnabled(false);
        this.j_menu_parametres.setEnabled(false);
        
        if(this.BDD_ID_PROFIL != null && this.BDD_ID_PROFIL.equals("2")){
            
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_cf_editable.setEnabled(false);
            this.j_menu_item_rapport_saisie.setEnabled(false);
            this.j_menu_item_rapports_sig.setEnabled(false);
            
            //this.j_menu_controllesSaisies.setEnabled(false);
        }

        this.jProgressBar_home.setVisible(false);
        this.j_label_texte_loading.setVisible(false);
        this.j_label_loading.setVisible(false);

        //System.out.println("Bonjour : " + username + "\nVotre mot de passe est : "+ password + "\nType d'opération : "+ type_op );
        if(this.type_operation.equals("OGCF")){
            this.lbl_type_operation.setText("Type d'opération séléctionné : "+this.type_operation);
        }else{
            this.lbl_type_operation.setText("Type d'opération séléctionné : OCFM");
        }
        
        this.lbl_test.setText("Bonjour " + username + " !");
        
        
        String nomAtelier = new Querry(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_USER, this.BDD_PWD).getNomAtelier();
        System.out.println("Nom de latelier sur home : " + nomAtelier);
        if(nomAtelier.equals("ATS")){
            this.j_menu_item_rapports_sig.setEnabled(true);
        }else{
            this.j_menu_item_rapports_sig.setEnabled(false);
        }
        
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        //connectDatabase = new ConnectDb("192.168.88.10", 5432, "oprod", "C@seF&Ge0X2", "postgres").getConnection();
        connectDatabase = new ConnectDb(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_USER, this.BDD_PWD).getConnection();
        
     

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLogin = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        paneChampsLogin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        dpContent = new javax.swing.JDesktopPane();
        lbl_test = new javax.swing.JLabel();
        lbl_type_operation = new javax.swing.JLabel();
        jProgressBar_home = new javax.swing.JProgressBar();
        j_label_texte_loading = new javax.swing.JLabel();
        j_label_loading = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        j_menu_fichier = new javax.swing.JMenu();
        j_menu_item_deconnexion = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        j_menu_item_quitter_application = new javax.swing.JMenuItem();
        j_menu_formatages = new javax.swing.JMenu();
        j_menu_item_formate_nom = new javax.swing.JMenuItem();
        j_menu_item_formate_prenom = new javax.swing.JMenuItem();
        j_menu_item_formate_lieu_naissance_ = new javax.swing.JMenuItem();
        j_menu_item_nom_parents = new javax.swing.JMenuItem();
        j_menu_item_adresse_demandeur = new javax.swing.JMenuItem();
        j_menu_item_lieu_dit = new javax.swing.JMenuItem();
        j_menu_item_formte_voisins = new javax.swing.JMenuItem();
        j_menu_item_formte_charges = new javax.swing.JMenuItem();
        j_menu_item_formte_consistance_ = new javax.swing.JMenuItem();
        j_menu_item_formte_lieu_cin = new javax.swing.JMenuItem();
        j_menu_item_formte_leiu_acte_naissance = new javax.swing.JMenuItem();
        j_menu_exports = new javax.swing.JMenu();
        j_menu_export_listes_demandeurs = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        j_menu_export_listes_anomalies = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        j_menu_export_rp_provisoire = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        j_menu_export_listes_cf_editer_par_commune = new javax.swing.JMenuItem();
        j_menu_stats = new javax.swing.JMenu();
        j_menu_stat_saisie_par_operateur = new javax.swing.JMenuItem();
        j_menu_stat_anomalies_par_commune = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        j_menu_cf_editable = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        j_menu_item_rapport_saisie = new javax.swing.JMenuItem();
        j_menu_item_rapports_sig = new javax.swing.JMenuItem();
        j_menu_controllesSaisies = new javax.swing.JMenu();
        j_menu_controles_saisie = new javax.swing.JMenuItem();
        j_menu_parametres = new javax.swing.JMenu();
        j_menu_config_bdd = new javax.swing.JMenuItem();

        JLogin.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        JLogin.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        JLogin.setName("Connexion"); // NOI18N
        JLogin.setResizable(false);
        JLogin.setSize(new java.awt.Dimension(400, 500));

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Annuler");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jButton2)
                .addGap(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel1.setText("Nom d'utilisateur");
        jLabel1.setName("username"); // NOI18N

        javax.swing.GroupLayout paneChampsLoginLayout = new javax.swing.GroupLayout(paneChampsLogin);
        paneChampsLogin.setLayout(paneChampsLoginLayout);
        paneChampsLoginLayout.setHorizontalGroup(
            paneChampsLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneChampsLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        paneChampsLoginLayout.setVerticalGroup(
            paneChampsLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneChampsLoginLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(paneChampsLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout JLoginLayout = new javax.swing.GroupLayout(JLogin.getContentPane());
        JLogin.getContentPane().setLayout(JLoginLayout);
        JLoginLayout.setHorizontalGroup(
            JLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JLoginLayout.createSequentialGroup()
                .addGroup(JLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JLoginLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(paneChampsLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        JLoginLayout.setVerticalGroup(
            JLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneChampsLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SUIVI ACTION 3");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        dpContent.setBackground(new java.awt.Color(204, 204, 204));

        lbl_test.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        lbl_type_operation.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        j_label_texte_loading.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_label_texte_loading.setText("Veuillez patientez ...");

        j_label_loading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ressources/Eclipse-0.4s-200px (1).gif"))); // NOI18N
        j_label_loading.setText(" ");

        dpContent.setLayer(lbl_test, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dpContent.setLayer(lbl_type_operation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dpContent.setLayer(jProgressBar_home, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dpContent.setLayer(j_label_texte_loading, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dpContent.setLayer(j_label_loading, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout dpContentLayout = new javax.swing.GroupLayout(dpContent);
        dpContent.setLayout(dpContentLayout);
        dpContentLayout.setHorizontalGroup(
            dpContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dpContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dpContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dpContentLayout.createSequentialGroup()
                        .addComponent(lbl_type_operation, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 790, Short.MAX_VALUE)
                        .addGroup(dpContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_test, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProgressBar_home, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dpContentLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(j_label_loading)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dpContentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(j_label_texte_loading, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        dpContentLayout.setVerticalGroup(
            dpContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dpContentLayout.createSequentialGroup()
                .addContainerGap(276, Short.MAX_VALUE)
                .addComponent(j_label_loading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(j_label_texte_loading, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar_home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dpContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_test, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_type_operation, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jMenuBar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenuBar1MouseEntered(evt);
            }
        });

        j_menu_fichier.setText("Fichier");
        j_menu_fichier.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        j_menu_item_deconnexion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        j_menu_item_deconnexion.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_item_deconnexion.setText("Déconnexion");
        j_menu_item_deconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_deconnexionActionPerformed(evt);
            }
        });
        j_menu_fichier.add(j_menu_item_deconnexion);
        j_menu_fichier.add(jSeparator3);

        j_menu_item_quitter_application.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        j_menu_item_quitter_application.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_item_quitter_application.setText("Quitter");
        j_menu_item_quitter_application.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_quitter_applicationActionPerformed(evt);
            }
        });
        j_menu_fichier.add(j_menu_item_quitter_application);

        jMenuBar1.add(j_menu_fichier);

        j_menu_formatages.setText(" Formatage des données");
        j_menu_formatages.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        j_menu_item_formate_nom.setText("Nom des demandeurs");
        j_menu_item_formate_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formate_nomActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formate_nom);

        j_menu_item_formate_prenom.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        j_menu_item_formate_prenom.setText("Prénom(s) des demandeurss");
        j_menu_item_formate_prenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formate_prenomActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formate_prenom);

        j_menu_item_formate_lieu_naissance_.setText("Lieu Niassance");
        j_menu_item_formate_lieu_naissance_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formate_lieu_naissance_ActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formate_lieu_naissance_);

        j_menu_item_nom_parents.setText("Nom des Parents");
        j_menu_item_nom_parents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_nom_parentsActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_nom_parents);

        j_menu_item_adresse_demandeur.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        j_menu_item_adresse_demandeur.setText("Adresse(s) demandeurs");
        j_menu_item_adresse_demandeur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_adresse_demandeurActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_adresse_demandeur);

        j_menu_item_lieu_dit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        j_menu_item_lieu_dit.setText("Lieu Dit");
        j_menu_item_lieu_dit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_lieu_ditActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_lieu_dit);

        j_menu_item_formte_voisins.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        j_menu_item_formte_voisins.setText("Voisinnages");
        j_menu_item_formte_voisins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formte_voisinsActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formte_voisins);

        j_menu_item_formte_charges.setText("Charges");
        j_menu_item_formte_charges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formte_chargesActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formte_charges);

        j_menu_item_formte_consistance_.setText("Consistance");
        j_menu_item_formte_consistance_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formte_consistance_ActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formte_consistance_);

        j_menu_item_formte_lieu_cin.setText("Lieu CIN");
        j_menu_item_formte_lieu_cin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formte_lieu_cinActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formte_lieu_cin);

        j_menu_item_formte_leiu_acte_naissance.setText("Lieu Acte De Naissance");
        j_menu_item_formte_leiu_acte_naissance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_formte_leiu_acte_naissanceActionPerformed(evt);
            }
        });
        j_menu_formatages.add(j_menu_item_formte_leiu_acte_naissance);

        jMenuBar1.add(j_menu_formatages);

        j_menu_exports.setText(" Listes");
        j_menu_exports.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        j_menu_export_listes_demandeurs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        j_menu_export_listes_demandeurs.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_export_listes_demandeurs.setText("Listes des demandeurs");
        j_menu_export_listes_demandeurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_export_listes_demandeursActionPerformed(evt);
            }
        });
        j_menu_exports.add(j_menu_export_listes_demandeurs);
        j_menu_exports.add(jSeparator4);

        j_menu_export_listes_anomalies.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        j_menu_export_listes_anomalies.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_export_listes_anomalies.setText("Listes Anomalies");
        j_menu_export_listes_anomalies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_export_listes_anomaliesActionPerformed(evt);
            }
        });
        j_menu_exports.add(j_menu_export_listes_anomalies);
        j_menu_exports.add(jSeparator5);

        j_menu_export_rp_provisoire.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_export_rp_provisoire.setText("Registre Parcellaire Provisoire");
        j_menu_export_rp_provisoire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_export_rp_provisoireActionPerformed(evt);
            }
        });
        j_menu_exports.add(j_menu_export_rp_provisoire);
        j_menu_exports.add(jSeparator6);

        j_menu_export_listes_cf_editer_par_commune.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_export_listes_cf_editer_par_commune.setText("Listes CF éditer");
        j_menu_export_listes_cf_editer_par_commune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_export_listes_cf_editer_par_communeActionPerformed(evt);
            }
        });
        j_menu_exports.add(j_menu_export_listes_cf_editer_par_commune);

        jMenuBar1.add(j_menu_exports);

        j_menu_stats.setText("Statistique(s)");
        j_menu_stats.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_stats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_statsActionPerformed(evt);
            }
        });

        j_menu_stat_saisie_par_operateur.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_stat_saisie_par_operateur.setText(" Saisies");
        j_menu_stat_saisie_par_operateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_stat_saisie_par_operateurActionPerformed(evt);
            }
        });
        j_menu_stats.add(j_menu_stat_saisie_par_operateur);

        j_menu_stat_anomalies_par_commune.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_stat_anomalies_par_commune.setText("Anomalie Saisie par Commune(s)");
        j_menu_stat_anomalies_par_commune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_stat_anomalies_par_communeActionPerformed(evt);
            }
        });
        j_menu_stats.add(j_menu_stat_anomalies_par_commune);
        j_menu_stats.add(jSeparator1);

        j_menu_cf_editable.setText(" CF éditable");
        j_menu_cf_editable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_cf_editableActionPerformed(evt);
            }
        });
        j_menu_stats.add(j_menu_cf_editable);
        j_menu_stats.add(jSeparator2);

        j_menu_item_rapport_saisie.setText("Saisie par commune(s)");
        j_menu_item_rapport_saisie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_rapport_saisieActionPerformed(evt);
            }
        });
        j_menu_stats.add(j_menu_item_rapport_saisie);

        j_menu_item_rapports_sig.setText("Vectorisation par commune(s)");
        j_menu_item_rapports_sig.setName("setEnabled"); // NOI18N
        j_menu_item_rapports_sig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_item_rapports_sigActionPerformed(evt);
            }
        });
        j_menu_stats.add(j_menu_item_rapports_sig);

        jMenuBar1.add(j_menu_stats);

        j_menu_controllesSaisies.setText("Contrôles Traitement(s)");
        j_menu_controllesSaisies.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_controllesSaisies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_controllesSaisiesActionPerformed(evt);
            }
        });

        j_menu_controles_saisie.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        j_menu_controles_saisie.setText("Contrôles des saisies");
        j_menu_controles_saisie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_controles_saisieActionPerformed(evt);
            }
        });
        j_menu_controllesSaisies.add(j_menu_controles_saisie);

        jMenuBar1.add(j_menu_controllesSaisies);

        j_menu_parametres.setText("Paramètres");

        j_menu_config_bdd.setText("Configuration base de données");
        j_menu_config_bdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_menu_config_bddActionPerformed(evt);
            }
        });
        j_menu_parametres.add(j_menu_config_bdd);

        jMenuBar1.add(j_menu_parametres);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dpContent)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dpContent)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void j_menu_item_quitter_applicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_quitter_applicationActionPerformed

        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment quitter l'application ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            //System.out.println("click sur OK");
            System.exit(0);
        }
    }//GEN-LAST:event_j_menu_item_quitter_applicationActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.JLogin.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void j_menu_statsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_statsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j_menu_statsActionPerformed

    private void j_menu_stat_saisie_par_operateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_stat_saisie_par_operateurActionPerformed
        SaisieParOperateur s_par_op = new SaisieParOperateur(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_USER, this.BDD_PWD, this.type_operation);
        this.dpContent.add(s_par_op);
        s_par_op.show();

    }//GEN-LAST:event_j_menu_stat_saisie_par_operateurActionPerformed
    
    private String formats(String id_table, String nameOfTable, String col_updated){
        
        Map<String, String> tabPrenoms = new HashMap<>();
        String newFirstName = "";
        String idPersphys = "";
        Boolean etat = false;

        
        try {
            String q = " SELECT "+id_table+" , "+col_updated+" FROM "+nameOfTable+" ";
            st = connectDatabase.prepareStatement(q);    
            rs = st.executeQuery();
            
            
            while(rs.next()){
                tabPrenoms.put(rs.getString(id_table), rs.getString(col_updated));
            }
            
            st.close();
            rs.close();
            
            for (Map.Entry mapentry : tabPrenoms.entrySet()) {
                
                if(mapentry.getValue() != null){
                    
                   // System.out.println("clé: "+mapentry.getKey()  + " | valeur: " + mapentry.getValue());
                   
                    //System.out.println("clé: "+mapentry.getKey()  + " | valeur: " + mapentry.getValue().toString().trim());
                    idPersphys = mapentry.getKey().toString();
                    newFirstName = Formats.formatFirtsName(mapentry.getValue().toString().trim());
                    
                    // IL FAUT METTRE A JOUR LA BASE DE DONNEES
                    
                    String q2 = "UPDATE "+nameOfTable+" SET "+col_updated+" = ? WHERE "+id_table+" = ? ;";
                    st = connectDatabase.prepareStatement(q2);
                    st.setString(1, newFirstName);
                    st.setString(2, idPersphys);
                    st.executeUpdate();
                    //Persphys.setPrenom(idPersphys, newFirstName);
            
                    newFirstName = "";
                    idPersphys = "";
                }
            }
            

     
            etat = true;
            
            if(etat = true){
                this.j_menu_item_formate_prenom.setEnabled(true);
                this.j_menu_item_formate_prenom.setEnabled(true);
                this.j_menu_exports.setEnabled(true);
                this.j_menu_formatages.setEnabled(true);
                this.j_menu_stats.setEnabled(true);
            }
            
            st.close();
            rs.close();
            System.out.println("Fin formatages.");
        } catch (SQLException ex) {
            Logger.getLogger(Utilisateurs.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        return newFirstName;
    }
    

private String formatsToUpper(String id_table, String nameOfTable, String col_updated){
        
        Map<String, String> tabData = new HashMap<>();
        String newFirstName = "";
        String idTable = "";
        Boolean etatUpper = false;

        
        try {
            String q_get = " SELECT "+id_table+" , "+col_updated+" FROM "+nameOfTable+" ";
            st = connectDatabase.prepareStatement(q_get);    
            rs = st.executeQuery();
            

            
            while(rs.next()){
                tabData.put(rs.getString(id_table), rs.getString(col_updated));
            }
            
            st.close();
            rs.close();
            
            for (Map.Entry mapentry : tabData.entrySet()) {
                
                if(mapentry.getValue() != null){
                    
                   // System.out.println("clé: "+mapentry.getKey()  + " | valeur: " + mapentry.getValue());
                   
                    //System.out.println("clé: "+mapentry.getKey()  + " | valeur: " + mapentry.getValue().toString().trim());
                    idTable = mapentry.getKey().toString();
                    newFirstName = Formats.formatFirtsName(mapentry.getValue().toString().trim()).toUpperCase();
                    
                    // IL FAUT METTRE A JOUR LA BASE DE DONNEES
                    
                    String q_update = "UPDATE "+nameOfTable+" SET "+col_updated+" = ? WHERE "+id_table+" = ? ;";
                    st = connectDatabase.prepareStatement(q_update);
                    st.setString(1, newFirstName);
                    st.setString(2, idTable);
                    st.executeUpdate();
                    //Persphys.setPrenom(idPersphys, newFirstName);
            
                    newFirstName = "";
                    idTable = "";
                }
            }
            

     
            etatUpper = true;
            
            if(etatUpper = true){
                this.j_menu_item_formate_prenom.setEnabled(true);
                this.j_menu_item_formate_prenom.setEnabled(true);
                this.j_menu_exports.setEnabled(true);
                this.j_menu_formatages.setEnabled(true);
                this.j_menu_stats.setEnabled(true);
            }
            
            st.close();
            rs.close();
            System.out.println("Fin formatages to upper case.");
        } catch (SQLException ex) {
            Logger.getLogger(Utilisateurs.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        //System.out.println("Formateg prenoms lancé \n" + "Votre Prénom est le : " + newFirstName);
        return newFirstName;
    }
    
    
    
    private void j_menu_export_listes_demandeursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_export_listes_demandeursActionPerformed
         
    }//GEN-LAST:event_j_menu_export_listes_demandeursActionPerformed

    private void j_menu_item_formate_prenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formate_prenomActionPerformed

        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des prenom(s) des demandeurs dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            this.j_label_texte_loading.setVisible(true);
            this.j_label_loading.setVisible(true);
        
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            this.formats("id_persphys", "persphys", "prenom");
        }
        
        this.j_label_texte_loading.setVisible(false);
        this.j_label_loading.setVisible(false);
    }//GEN-LAST:event_j_menu_item_formate_prenomActionPerformed

    private void j_menu_item_lieu_ditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_lieu_ditActionPerformed
        
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des lieu dit dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            this.formats("id_demande", "demande", "lieu_dit");
            
            //System.exit(0);
        }
    }//GEN-LAST:event_j_menu_item_lieu_ditActionPerformed

    private void j_menu_item_deconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_deconnexionActionPerformed
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment se deconnecter ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            // recuperation des démarches
            Iterator it = new Querry(this.BDD_HOST,this.BDD_PORT,this.BDD_DBNAME,this.BDD_USER,this.BDD_PWD).getAllDemarche().entrySet().iterator();
            List<String> demarches = new ArrayList<String>();

	    while (it.hasNext()) {
	        Map.Entry<String, String> val = (Map.Entry)it.next();
                demarches.add(val.getValue().toString());  
	    }
            
            this.setVisible(false);
            
            UserFormDialog userForm = new UserFormDialog(this.BDD_HOST,this.BDD_PORT,this.BDD_DBNAME,this.BDD_USER,this.BDD_PWD, demarches);
            userForm.setLocationRelativeTo(null);
            userForm.setVisible(true);
        }
        

    }//GEN-LAST:event_j_menu_item_deconnexionActionPerformed

    private void j_menu_item_formte_voisinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formte_voisinsActionPerformed
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des voisin(s) des demandeurs dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            
            System.out.println("Début formatages des voisins...");
            
            System.out.println("Formatage voisin Nord");
            this.formats("id_demande", "demande", "v_nord");
            
            System.out.println("Formatage Voisin Sud");
            this.formats("id_demande", "demande", "v_sud");
            
            System.out.println("Formatage Voisin Est");
            this.formats("id_demande", "demande", "v_est");
            
            System.out.println("Formatage Voisin Ouest");
            this.formats("id_demande", "demande", "v_ouest");
        }
    }//GEN-LAST:event_j_menu_item_formte_voisinsActionPerformed

    private void j_menu_item_nom_parentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_nom_parentsActionPerformed

        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des voisin(s) des demandeurs dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            this.j_label_texte_loading.setVisible(true);
            this.j_label_loading.setVisible(true);
        
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            
            System.out.println("Début formatage...");
            System.out.println("Formatage Nom Père");
            this.formats("id_persphys", "persphys", "nom_pere");
            
            System.out.println("Formatage Nom Mère");
            this.formats("id_persphys", "persphys", "nom_mere");
        }
        this.j_label_texte_loading.setVisible(false);
        this.j_label_loading.setVisible(false);
    }//GEN-LAST:event_j_menu_item_nom_parentsActionPerformed

    private void j_menu_item_formte_chargesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formte_chargesActionPerformed
        
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des charges sur les demandes des demandeurs ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            this.formats("id_demande", "demande", "charges");
        }
        
    }//GEN-LAST:event_j_menu_item_formte_chargesActionPerformed

    private void j_menu_item_formte_lieu_cinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formte_lieu_cinActionPerformed
        
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des lieux de délivrance du CIN des demandeurs dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            
            System.out.println("Début formatage...");
            System.out.println("Formatage Lieu CIN");
            this.formats("id_persphys", "persphys", "cni_lieu");
        }
    }//GEN-LAST:event_j_menu_item_formte_lieu_cinActionPerformed

    private void j_menu_item_formte_leiu_acte_naissanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formte_leiu_acte_naissanceActionPerformed
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des lieux de délivrance de l'acte de naisance des demandeurs dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            
            System.out.println("Début formatage...");
            System.out.println("Formatage Lieu Acte de Naissance");
            this.formats("id_persphys", "persphys", "acn_lieu");
        }
    }//GEN-LAST:event_j_menu_item_formte_leiu_acte_naissanceActionPerformed

    private void j_menu_export_rp_provisoireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_export_rp_provisoireActionPerformed
        
        ExportRegistreParcellaire rp_prov = new ExportRegistreParcellaire(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_PWD, this.BDD_USER,this.type_operation);
        
        this.dpContent.add(rp_prov);
        rp_prov.show();
               
    }//GEN-LAST:event_j_menu_export_rp_provisoireActionPerformed

    private void j_menu_export_listes_anomaliesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_export_listes_anomaliesActionPerformed

        ExportRegistreAnomalie reg_anomaie = new ExportRegistreAnomalie(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_PWD, this.BDD_USER, type_operation);
        this.dpContent.add(reg_anomaie);
        reg_anomaie.show();
        
        
        //SaisieParOperateur s_par_op = new SaisieParOperateur();
        //this.dpContent.add(s_par_op);
        //s_par_op.show();
        
    }//GEN-LAST:event_j_menu_export_listes_anomaliesActionPerformed

    private void j_menu_item_adresse_demandeurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_adresse_demandeurActionPerformed
        
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage l'adresse des demandeurs dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            this.j_label_texte_loading.setVisible(true);
            this.j_label_loading.setVisible(true);
        
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            this.formats("id_persphys", "persphys", "adresse");
        }
        
            this.j_label_texte_loading.setVisible(false);
            this.j_label_loading.setVisible(false);
        
    }//GEN-LAST:event_j_menu_item_adresse_demandeurActionPerformed

    private void j_menu_item_formate_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formate_nomActionPerformed

        
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage de nom(s) des demandeurs dans la base de données ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            

        this.j_label_texte_loading.setVisible(true);
        this.j_label_loading.setVisible(true);

            
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            this.j_menu_controllesSaisies.setEnabled(false);
            
            
            //this.jProgressBar_home.setVisible(true);
            //this.j_labal_perc.setVisible(true);
            
            //BarreDeProgression pBar = new BarreDeProgression(this.jProgressBar_home, this.j_labal_perc);
            //pBar.run();
     
            this.formatsToUpper("id_persphys", "persphys", "nom");
        }
        
        
        this.j_label_texte_loading.setVisible(false);
        this.j_label_loading.setVisible(false);
    }//GEN-LAST:event_j_menu_item_formate_nomActionPerformed

    private void j_menu_item_formate_lieu_naissance_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formate_lieu_naissance_ActionPerformed

        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage du lieu de naissance des demandeurs ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            this.j_label_texte_loading.setVisible(true);
            this.j_label_loading.setVisible(true);
        
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            this.formats("id_persphys", "persphys", "naissance_lieu");
        }
        
        this.j_label_texte_loading.setVisible(false);
        this.j_label_loading.setVisible(false);
    }//GEN-LAST:event_j_menu_item_formate_lieu_naissance_ActionPerformed

    private void j_menu_item_formte_consistance_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_formte_consistance_ActionPerformed
        JOptionPane jop = new JOptionPane();
        int option = jop.showConfirmDialog(null, "Voulez-vous vraiment lancer le formatage des consistance(s) des demandes ?","" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.OK_OPTION){
            
            this.j_menu_item_formate_prenom.setEnabled(false);
            this.j_menu_exports.setEnabled(false);
            this.j_menu_formatages.setEnabled(false);
            this.j_menu_stats.setEnabled(false);
            
            this.formats("id_demande", "demande", "consistance");
        }
    }//GEN-LAST:event_j_menu_item_formte_consistance_ActionPerformed

    private void j_menu_controles_saisieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_controles_saisieActionPerformed
        
        ControlleDesSaisies ctrl_saisie = new ControlleDesSaisies();
        this.dpContent.add(ctrl_saisie);
        ctrl_saisie.show();
    }//GEN-LAST:event_j_menu_controles_saisieActionPerformed

    private void j_menu_controllesSaisiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_controllesSaisiesActionPerformed
        System.out.println("click sur btn ");
    }//GEN-LAST:event_j_menu_controllesSaisiesActionPerformed

    private void jMenuBar1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuBar1MouseEntered
        this.lbl_test.setText("");
    }//GEN-LAST:event_jMenuBar1MouseEntered

    private void j_menu_export_listes_cf_editer_par_communeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_export_listes_cf_editer_par_communeActionPerformed
        
        ExportCFEditerParCommunes cf_editer = new ExportCFEditerParCommunes(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_USER, this.BDD_PWD, type_operation);
        this.dpContent.add(cf_editer);
        cf_editer.show();
        
        //System.out.println("BDD_HOST : " + BDD_HOST);
        //System.out.println("BDD_PORT : " + BDD_PORT);
        //System.out.println("BDD_DBNAME : " + BDD_DBNAME);
        //System.out.println("BDD_USER : " + BDD_USER);
        //System.out.println("BDD_PWD : " + BDD_PWD);
    }//GEN-LAST:event_j_menu_export_listes_cf_editer_par_communeActionPerformed

    private void j_menu_item_rapports_sigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_rapports_sigActionPerformed
        RapportSIG v_rapport_sig = new RapportSIG(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_PWD, this.BDD_USER, type_operation);
        this.dpContent.add(v_rapport_sig);
        v_rapport_sig.show();
    }//GEN-LAST:event_j_menu_item_rapports_sigActionPerformed

    private void j_menu_item_rapport_saisieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_item_rapport_saisieActionPerformed
        RapportSAISIE v_rapport_saisie = new RapportSAISIE(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_PWD, this.BDD_USER, type_operation);
        this.dpContent.add(v_rapport_saisie);
        v_rapport_saisie.show();
    }//GEN-LAST:event_j_menu_item_rapport_saisieActionPerformed

    private void j_menu_cf_editableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_cf_editableActionPerformed
        RapportCfEditableParCommune v_rapport_saisie_par_commune = new RapportCfEditableParCommune(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_PWD, this.BDD_USER, type_operation);
        this.dpContent.add(v_rapport_saisie_par_commune);
        v_rapport_saisie_par_commune.show();
    }//GEN-LAST:event_j_menu_cf_editableActionPerformed

    private void j_menu_stat_anomalies_par_communeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_stat_anomalies_par_communeActionPerformed
        RapportAnomalieSaisieParCommune v_rapport_anomalies_saisie_par_commune = new RapportAnomalieSaisieParCommune(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_PWD, this.BDD_USER, type_operation);
        this.dpContent.add(v_rapport_anomalies_saisie_par_commune);
        v_rapport_anomalies_saisie_par_commune.show();
    }//GEN-LAST:event_j_menu_stat_anomalies_par_communeActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.isControlDown() && evt.isShiftDown() && evt.getKeyChar() != 'p'&& evt.getKeyChar() != 'P' && evt.getKeyCode() == 80) {
                System.out.println("CTRL + SHIFT + p"); 
                this.j_menu_parametres.setEnabled(true);
                
                ///this.j_menu_parametres.set
        }
    }//GEN-LAST:event_formKeyPressed

    private void j_menu_config_bddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_menu_config_bddActionPerformed
        ModificationConfigurationBaseDeDonnees v_rapport_anomalies_saisie_par_commune = new ModificationConfigurationBaseDeDonnees(this.BDD_HOST, this.BDD_PORT, this.BDD_DBNAME, this.BDD_PWD, this.BDD_USER);
        this.dpContent.add(v_rapport_anomalies_saisie_par_commune);
        v_rapport_anomalies_saisie_par_commune.show();
        
    }//GEN-LAST:event_j_menu_config_bddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                
                //new Home(userName, pswd, type_operation).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog JLogin;
    private javax.swing.JDesktopPane dpContent;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar_home;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel j_label_loading;
    private javax.swing.JLabel j_label_texte_loading;
    private javax.swing.JMenuItem j_menu_cf_editable;
    private javax.swing.JMenuItem j_menu_config_bdd;
    private javax.swing.JMenuItem j_menu_controles_saisie;
    private javax.swing.JMenu j_menu_controllesSaisies;
    private javax.swing.JMenuItem j_menu_export_listes_anomalies;
    private javax.swing.JMenuItem j_menu_export_listes_cf_editer_par_commune;
    private javax.swing.JMenuItem j_menu_export_listes_demandeurs;
    private javax.swing.JMenuItem j_menu_export_rp_provisoire;
    private javax.swing.JMenu j_menu_exports;
    private javax.swing.JMenu j_menu_fichier;
    private javax.swing.JMenu j_menu_formatages;
    private javax.swing.JMenuItem j_menu_item_adresse_demandeur;
    private javax.swing.JMenuItem j_menu_item_deconnexion;
    private javax.swing.JMenuItem j_menu_item_formate_lieu_naissance_;
    private javax.swing.JMenuItem j_menu_item_formate_nom;
    private javax.swing.JMenuItem j_menu_item_formate_prenom;
    private javax.swing.JMenuItem j_menu_item_formte_charges;
    private javax.swing.JMenuItem j_menu_item_formte_consistance_;
    private javax.swing.JMenuItem j_menu_item_formte_leiu_acte_naissance;
    private javax.swing.JMenuItem j_menu_item_formte_lieu_cin;
    private javax.swing.JMenuItem j_menu_item_formte_voisins;
    private javax.swing.JMenuItem j_menu_item_lieu_dit;
    private javax.swing.JMenuItem j_menu_item_nom_parents;
    private javax.swing.JMenuItem j_menu_item_quitter_application;
    private javax.swing.JMenuItem j_menu_item_rapport_saisie;
    private javax.swing.JMenuItem j_menu_item_rapports_sig;
    private javax.swing.JMenu j_menu_parametres;
    private javax.swing.JMenuItem j_menu_stat_anomalies_par_commune;
    private javax.swing.JMenuItem j_menu_stat_saisie_par_operateur;
    private javax.swing.JMenu j_menu_stats;
    private javax.swing.JLabel lbl_test;
    private javax.swing.JLabel lbl_type_operation;
    private javax.swing.JPanel paneChampsLogin;
    // End of variables declaration//GEN-END:variables
}
